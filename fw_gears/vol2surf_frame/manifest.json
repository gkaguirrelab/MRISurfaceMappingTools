{
	"name": "vol2surf",
	"label": "vol2surf: Map volumetric MRI images to fsaverage and FSLR surfaces",
	"description": "This gear maps volumetric time-series or R2 maps to surfaces. The gear uses freesurfer and python tools to make FS and gifti surfaces.Then, ciftify is used to convert recon-all output to hcp folder structure and creating .dtseries CIFTI images. You can also map any timeseries to custom freesurfer surface.",
	"author": "Ozenc Taskin",
	"maintainer": "Ozenc Taskin <huseyinozenc.taskin@pennmedicine.upenn.edu>",
	"source": "https://github.com/gkaguirrelab/MRISurfaceMappingTools",
	"url": "https://github.com/gkaguirrelab/MRISurfaceMappingTools/fw_gears",
	"version": "0.1.1",
	"custom": {
		"flywheel": {
			"suite": "GKAguirreLab"
		},
		"docker-image": ""
	},
	"license": "Other",
	"config": {
		"imageName":  {
  			"description": "Name of the image you want to process in a zip or tar archive. This is implemented so that fmriprep, hcp, or any other zip output can be used as input. If your input is a single image and not an archive, enter NA here. Otherwise, enter the name of the image in your archive you want to process. The image can be located anywhere in your zip archive. This gear will find it. But make sure that you do not have two different images with the same name in your archive. If your input is an fmriprep output, you can enter the output spaces you used for the fmriprep analysis (e.g MNI152NLin6Sym). In this case, the gear will convert all of the output images in your fmriprep archive with that space name. Multiple output spaces can be entered by separating the names with spaces (e.g func MNI152NLin6Sym). lastly, if you have a zip archive containing a bunch of images (should not be in nested folders), you can enter 'all' without the single quotes and process all of the images in that archive",
  			"type": "string"
		},
		"inputIsAlreadyInMNI152":  {
            "default": false,
  			"description": "Enable this if your input image(s) is/are already in the MNI space. Otherwise provide a registrationTemplate for MNI registration",
  			"type": "boolean"
		},
		"inputIsFmriprepArchive":  {
            "default": false,
  			"description": "Enable this is if your input is a fmriprep archive",
  			"type": "boolean"
		},
		"registerToCustomSurface":  {
            "default": false,
  			"description": "Use this option if you want to map images to a custom surface images (e.g. animal brain surfaces). Requires a recon-all archive input and a registration template. If this option is used only freesurfer style surfaces are prodcued and resampling to FSLR is skipped.",
  			"type": "boolean"
		},
		"saveCiftifyStructure":  {
            "default": true,
  			"description": "Saves the hcp file structure generated by ciftify.",
  			"type": "boolean"
		}
	},
	"inputs": {
		"inputImageOrArchive": {
			"description": "Single image or any zip archive. The gear can locate the image you want to process in a zip archive. Fmriprep archive can be used and multiple images can be processed. See the description for the imageName config for more details",
			"base": "file",
			"optional": false
		},
		"registrationTemplate": {
			"description": "This is a template image which is in the same space as your input functional. It is used for calculating warp to MNI template if your input image is not already in the MNI space (If it is, leave this empty). If your input is an fmriprep archive, this can be left empty even if your input is not in MNI space as the gear can find the files it needs from the fmriprep archive.",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"zippedReconAll": {
			"description": "Zipped recon-all output to map the images to. Used for making CIFTI maps. If not specified, ciftify stage is skipped. Required for custom surface mapping.",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		}
	}
}
